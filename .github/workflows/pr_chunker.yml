name: PR Chunker
on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  chunk-and-assign:
    runs-on: ubuntu-latest
    steps:
      # Debug environment
      - name: Debug - Environment Context
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "PR_NUMBER: ${{ github.event.number }}"
          echo "TOKEN STATUS: ${{ secrets.PAT_TOKEN != '' }}"

      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      # Setup Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      # Install dependencies
      - name: Install dependencies
        run: |
          pip install -r scripts/pr_review/requirements.txt
          pip list

      # Generate chunks
      - name: Generate review chunks
        id: chunker
        run: |
          python scripts/pr_review/chunker.py \
            --repo ${{ github.repository }} \
            --pr ${{ github.event.number }} \
            --base ${{ github.event.pull_request.base.sha }} \
            --head ${{ github.event.pull_request.head.sha }} \
            --output chunks.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Post PR comment (simplified)
      - name: Post chunk summary
        if: steps.chunker.outcome == 'success'
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            try {
              const content = fs.readFileSync('chunks.md', 'utf8');
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: content
              });
            } catch (error) {
              console.error('Failed to post comment:', error);
            }

      # Create review issue
      - name: Create review issue
        if: steps.chunker.outcome == 'success'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "PR#${{ github.event.number }} Review Checklist"
          content-filepath: ./chunks.md
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: "code-review"

      # Error handling
      - name: Post error notice
        if: steps.chunker.outcome != 'success'
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `⚠️ Chunking failed. Please review manually:\n${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`
            });