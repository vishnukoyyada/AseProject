name: PR Chunker
on:
  pull_request:
    types: [opened, reopened, synchronize]

# Critical permissions setup
permissions:
  contents: read
  issues: write
  pull-requests: write  # Essential for PR comments
  repository-projects: write

jobs:
  chunk-and-review:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      # 1. Checkout with full history
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true  # Important for token access

      # 2. Setup Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      # 3. Install dependencies
      - name: Install dependencies
        run: pip install -r scripts/pr_review/requirements.txt

      # 4. Generate chunks
      - name: Generate review chunks
        id: generate-chunks
        run: |
          python scripts/pr_review/chunker.py \
            --repo ${{ github.repository }} \
            --pr ${{ github.event.number }} \
            --base ${{ github.event.pull_request.base.sha }} \
            --head ${{ github.event.pull_request.head.sha }} \
            --output chunks.md

      # 5. Post PR comment (working version)
      - name: Post PR comment
        if: steps.generate-chunks.outcome == 'success'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            try {
              const content = fs.readFileSync('chunks.md', 'utf8');
              // Use issues.createComment for PR comments
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: content
              });
              console.log('Successfully posted PR comment');
            } catch (error) {
              console.error('Failed to post comment. Verify:');
              console.error('1. Repository Settings > Actions > Workflow Permissions');
              console.error('2. Token has "pull-requests: write" scope');
              console.error('Full error:', error);
              process.exit(1);
            }

      # 6. Create tracking issue
      - name: Create review issue
        if: steps.generate-chunks.outcome == 'success'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "PR#${{ github.event.number }} Review Checklist"
          content-filepath: ./chunks.md
          labels: "code-review"
          assignees: ${{ github.event.pull_request.requested_reviewers.*.login }}

      # 7. Error handling
      - name: Post failure notice
        if: steps.generate-chunks.outcome != 'success'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚ùå Automatic chunking failed\n\n` +
                    `Please review manually: ${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.number }}`
            });