name: PR Chunker Debug
on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  issues: write
  pull-requests: read

jobs:
  debug_and_run:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install libcst gitpython pygithub

    - name: Setup debug tools
      run: |
        sudo apt-get -y install jq
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh

    - name: Debug - Environment
      run: |
        echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
        echo "GITHUB_WORKFLOW: $GITHUB_WORKFLOW"
        echo "GITHUB_ACTOR: $GITHUB_ACTOR"

    - name: Run PR chunker
      run: python scripts/pr_chunker.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        BASE_SHA: ${{ github.event.pull_request.base.sha }}
        HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        GITHUB_REPOSITORY: ${{ github.repository }}

    - name: Validate output
      run: |
        if [ ! -f "pr_chunks.md" ]; then
          echo "Error: pr_chunks.md not generated!"
          exit 1
        fi
        echo "File generated successfully:"
        head -n 10 pr_chunks.md

    - name: Create issue
      if: success()
      uses: peter-evans/create-issue-from-file@v4
      with:
        title: "Review Checklist for PR #${{ github.event.pull_request.number }}"
        content-filepath: ./pr_chunks.md
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}